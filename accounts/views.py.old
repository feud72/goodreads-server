import jwt

from django.conf import settings

from rest_framework.response import Response
from rest_framework import viewsets, status
from rest_framework.decorators import action
from rest_framework.permissions import AllowAny

from .serializers import RegistrationSerializer, LoginSerializer, EmptySerializer
from .utils import get_and_authenticate_user, create_user_account

from users.models import User


class AuthViewSet(viewsets.GenericViewSet):
    queryset = User.objects.all()
    permission_classes = [
        AllowAny,
    ]
    serializer_class = EmptySerializer
    serializer_classes = {
        "login": LoginSerializer,
        "signup": RegistrationSerializer,
    }

    @action(methods=["POST",], detail=False)
    def login(self, request):
        """
        Validate username and password.

        ---
        username|string|required
        password|string|required
        """

        serializer = self.get_serializer(data=request.data)
        serializer.is_valid(raise_exception=True)
        username = request.data.get("username")
        password = request.data.get("password")
        if not username or not password:
            return Response(status=status.HTTP_400_BAD_REQUEST)
        user = get_and_authenticate_user(**serializer.validated_data)
        if user is not None:
            encoded_jwt = jwt.encode(
                {"pk": user.pk}, settings.SECRET_KEY, algorithm="HS256"
            )
            return Response(data={"token": encoded_jwt, "id": user.pk})
        else:
            return Response(status=status.HTTP_401_UNAUTHORIZED)

    @action(methods=["POST",], detail=False)
    def signup(self, request):
        serializer = self.get_serializer(data=request.data)
        serializer.is_valid(raise_exception=True)
        # user = create_user_account(**serializer.validated_data)
        data = {}
        if serializer.is_valid():
            user = serializer.save()
            data["message"] = "Successfully registered a new user."
            data["username"] = user.username
            data["email"] = user.email
        return Response(status=status.HTTP_201_CREATED, data=data)

    # serializer = RegistrationSerializer(data=request.data)
    # data = {}
    # if serializer.is_valid():
    #    user = serializer.save()
    #    data["response"] = "successfully registered a new user."
    #    data["email"] = user.email
    #    data["username"] = user.username
    # else:
    #    data = serializer.errors
    # return Response(data)
