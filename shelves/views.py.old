from rest_framework.response import Response
from rest_framework.decorators import api_view, permission_classes
from rest_framework import status
from rest_framework.permissions import IsAuthenticated

from .serializers import BookShelfSerializer, MyBookSerializer, MemoSerializer
from .models import BookShelf, MyBook, Memo


@api_view(["GET", "POST"])
@permission_classes([IsAuthenticated])
def bookShelfView(request):
    queryset = BookShelf.objects.all()
    serializer = BookShelfSerializer

    if request.method == "GET":
        queryset = queryset.filter(owner__username=request.user)
        data = serializer(queryset, many=True)
        return Response(status=status.HTTP_200_OK, data=data.data)
    if request.method == "POST":
        pass


@api_view(["GET", "POST"])
@permission_classes([IsAuthenticated])
def myBookView(request):
    queryset = MyBook.objects.filter(bookshelf__owner__username=request.user)
    serializer = MyBookSerializer

    if request.method == "GET":
        data = serializer(queryset, many=True)
        return Response(status=status.HTTP_200_OK, data=data.data)
    if request.method == "POST":
        pass


@api_view(["GET", "POST"])
@permission_classes([IsAuthenticated])
def memoView(request):
    queryset = Memo.objects.filter(book__bookshelf__owner__username=request.user)
    serializer = MemoSerializer

    if request.method == "GET":
        data = serializer(queryset, many=True)
        return Response(status=status.HTTP_200_OK, data=data.data)
    if request.method == "POST":
        pass
